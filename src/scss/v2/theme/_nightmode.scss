// @todo can we refactor this to only be a css variable replacement?

$c-night: #292929;
$c-night-darker: #191919;
$bx-night: inset 0 0 100px 0 $c-night-darker;

.archmage-v2.sheet.nightmode .window-content,
.archmage-v2.archmage-dialog.nightmode .window-content {
  background: $c-night;
  box-shadow: $bx-night;

  .archmage-v2-vue {
    // background-image: url('#{$assets}/paper-v2-nightmode.webp');
    color: $c-white;

    .notes {
      color: $c-white--60;
    }

    .slider-base {
      background-color: #111;
    }

    select,
    .multiselect,
    .multiselect-dropdown {
      color: $c-white;
      border-color: $c-black;
      background: #111;
    }

    select option {
      background: #111;
    }

    p,
    table,
    th,
    td,
    tbody,
    thead {
      color: $c-white !important;
      border-color: $ct-border-night !important;
    }

    input[type="text"],
    input[type="number"],
    textarea {
      color: $c-white;
      border-color: $c-white;

      &::placeholder {
        color: $c-white--50;
      }

      &:hover,
      &:focus {
        color: $c-blue;
        border-color: $c-blue;
      }
    }

    .background-name {
      border-color: $c-white;

      &:hover {
        border-color: $c-blue;
      }
    }

    .icon-roll {
      background-color: $c-white--10 !important;

      &:hover {
        background-color: $c-blue !important;
      }
    }

    .avatar--frame {
      background-color: $ct-border-night !important;
      box-shadow: 0 0 20px 10px $ct-border !important;
    }

    .unit--attributes .unit::before,
    .ability-mod::after {
      background-color: $ct-border-night !important;
    }

    .section--attributes {
      .unit--attributes {
        span.defense-value,
        div.resource-max {
          border-color: $c-white;
        }
      }
    }

    .unit,
    .power-filters,
    .equipment-filters,
    .list-item,
    .section--sidebar {
      border-color: $ct-border-night !important;
    }

    .editor-content {
      background-color: $c-white--05;
    }

    .editor-edit {
      background: transparent !important;
      border: 0 !important;
      box-shadow: none !important;
    }

    .tox-tinymce {

      .tox-editor-header {
        background: transparent;
      }

      .tox-toolbar-overlord,
      .tox-toolbar__primary {
        background: transparent;
        border-bottom: 1px solid $c-white;
      }

      .tox-edit-area{
        background: $c-white--85;
      }

      button {
        font-size: $font-xxs;
        padding: 0;
        border: 0;
        background: transparent;
        margin: 0;
        width: auto;
        height: auto;

        svg * {
          fill: $c-white !important;
        }

        &:hover {
          box-shadow: none !important;
          color: $c-blue !important;

          svg * {
            fill: $c-blue !important;
          }
        }

        &.tox-tbtn--disabled {
          svg * {
            fill: $c-white--45 !important;
          }
        }
      }
    }

    .unit--attributes {
      &::before,
      &::after {
        background-image: url('#{$assets}/svg/border-wide-white.svg') !important;
      }
    }

    .section--sidebar .section::before {
      background-image: url('#{$assets}/svg/border-narrow-white.svg') !important;
    }

    .section--resources::after {
      background-image: url('#{$assets}/svg/border-white.svg') !important;
    }

    .unit--currency-gold {
      color: #efc44a;
    }

    .unit--currency-silver {
      color: #888;
    }

    .unit--currency-copper {
      color: #c17a58;
    }

    .power-trigger-tooltip,
    .power-trigger-tooltip::before {
      background: #111 !important;
      color: $c-white !important;
      border-color: $ct-border-night !important;
    }

    .expression {
      color: #ff7b7b;
    }

    .input-edit {
      background: $c-night-darker;
    }
  }
}
